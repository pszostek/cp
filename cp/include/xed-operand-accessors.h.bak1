/*BEGIN_LEGAL 
Intel Open Source License 

Copyright (c) 2002-2013 Intel Corporation. All rights reserved.
 
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:

Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer. Redistributions
in binary form must reproduce the above copyright notice, this list of
conditions and the following disclaimer in the documentation and/or
other materials provided with the distribution. Neither the name of
the Intel Corporation nor the names of its contributors may be used to
endorse or promote products derived from this software without
specific prior written permission.
 
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE INTEL OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
END_LEGAL */
/// @file xed-operand-accessors.h

// This file was automatically generated.
// Do not edit this file.

#if !defined(_XED_OPERAND_ACCESSORS_H_)
# define _XED_OPERAND_ACCESSORS_H_
#include "xed-decoded-inst.h"
static inline xed_operand_values_t xed3_operand_get_xsrc(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_xsrc(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_sib(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_sib(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_last_f2f3(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_last_f2f3(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_disp_width(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_disp_width(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_using_default_segment0(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_using_default_segment0(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_using_default_segment1(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_using_default_segment1(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_hint(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_hint(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_mode_first_prefix(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_mode_first_prefix(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_uimm1(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_uimm1(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_smode(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_smode(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_rm(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_rm(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_modrm(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_modrm(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_chip(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_chip(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_mode(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_mode(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_rexxp(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_rexxp(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_brdisp1(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_brdisp1(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_reg13(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_reg13(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_amd3dnow(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_amd3dnow(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_vexpfx_op(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_vexpfx_op(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_outreg(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_outreg(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_map(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_map(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_sibindex(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_sibindex(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_agen(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_agen(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_nominal_opcode(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_nominal_opcode(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_seg1(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_seg1(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_seg0(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_seg0(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_vexpp(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_vexpp(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_nprefixes(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_nprefixes(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_index(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_index(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_ild_f2(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_ild_f2(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_scale(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_scale(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_sreg(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_sreg(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_esrc(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_esrc(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_vexl(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_vexl(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_nrexes(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_nrexes(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_pos_sib(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_pos_sib(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_osz(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_osz(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_uimm02(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_uimm02(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_uimm03(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_uimm03(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_uimm00(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_uimm00(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_uimm01(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_uimm01(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_element_size(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_element_size(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_pos_disp(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_pos_disp(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_vexdest210(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_vexdest210(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_vexdest3(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_vexdest3(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_refining(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_refining(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_vexr_op(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_vexr_op(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_ptr(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_ptr(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_vexpp_op(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_vexpp_op(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_p4(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_p4(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_lbit(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_lbit(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_modep55c(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_modep55c(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_iclass(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_iclass(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_vmap(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_vmap(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_imm_width(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_imm_width(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_error(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_error(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_nelem(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_nelem(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_imm0signed(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_imm0signed(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_reg8(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_reg8(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_reg9(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_reg9(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_reg6(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_reg6(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_reg7(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_reg7(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_reg4(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_reg4(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_reg5(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_reg5(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_reg2(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_reg2(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_reg3(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_reg3(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_reg0(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_reg0(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_reg1(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_reg1(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_base0(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_base0(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_df32(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_df32(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_escvl_op(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_escvl_op(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_xmap43(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_xmap43(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_mod(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_mod(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_rex(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_rex(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_rexb(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_rexb(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_pos_imm(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_pos_imm(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_rep(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_rep(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_rexw(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_rexw(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_ild_f3(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_ild_f3(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_rexr(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_rexr(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_rexbp(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_rexbp(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_disp_bytes(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_disp_bytes(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_encoder_preferred(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_encoder_preferred(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_reg(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_reg(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_pos_nominal_opcode(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_pos_nominal_opcode(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_rexx(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_rexx(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_prefix66(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_prefix66(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_vexb_op(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_vexb_op(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_rexrp(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_rexrp(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_asz(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_asz(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_mem1(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_mem1(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_easz(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_easz(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_pos_imm1(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_pos_imm1(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_mem_width(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_mem_width(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_xmap(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_xmap(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_mem0(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_mem0(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_brdisp_width(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_brdisp_width(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_imm1_bytes(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_imm1_bytes(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_df64(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_df64(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_lock(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_lock(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_has_modrm(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_has_modrm(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_srm(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_srm(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_vexvalid(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_vexvalid(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_needrex(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_needrex(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_rep_able(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_rep_able(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_default_seg(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_default_seg(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_nseg_prefixes(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_nseg_prefixes(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_vexl_op(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_vexl_op(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_vex_c4(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_vex_c4(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_pos_modrm(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_pos_modrm(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_bcast(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_bcast(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_type(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_type(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_vexmm34_op(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_vexmm34_op(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_seg_ovd(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_seg_ovd(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_vex_prefix(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_vex_prefix(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_norex(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_norex(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_sibbase(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_sibbase(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_need_memdisp(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_need_memdisp(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_out_of_bytes(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_out_of_bytes(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_lockable(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_lockable(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_imm1(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_imm1(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_imm0(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_imm0(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_relbr(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_relbr(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_ild_seg(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_ild_seg(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_mbits(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_mbits(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_base1(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_base1(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_vexx_op(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_vexx_op(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_realmode(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_realmode(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_modrm_byte(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_modrm_byte(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_reg14(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_reg14(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_reg15(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_reg15(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_reg10(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_reg10(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_reg11(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_reg11(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_reg12(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_reg12(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_brdisp0(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_brdisp0(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_disp1(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_disp1(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_disp0(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_disp0(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_disp3(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_disp3(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_disp2(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_disp2(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_sibscale(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_sibscale(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_imm_bytes(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_imm_bytes(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_vl(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_vl(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_has_sib(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_has_sib(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_max_bytes(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_max_bytes(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_first_f2f3(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_first_f2f3(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_vb2_op(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_vb2_op(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_eosz(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_eosz(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_vexmap_op(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_vexmap_op(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_modep5(const xed_decoded_inst_t* d);

static inline void xed3_operand_set_modep5(xed_decoded_inst_t* d, xed_operand_values_t opval);

static inline xed_operand_values_t xed3_operand_get_xsrc(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_XSRC];
}
static inline void xed3_operand_set_xsrc(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_XSRC] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_sib(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_SIB];
}
static inline void xed3_operand_set_sib(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_SIB] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_last_f2f3(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_LAST_F2F3];
}
static inline void xed3_operand_set_last_f2f3(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_LAST_F2F3] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_disp_width(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_DISP_WIDTH];
}
static inline void xed3_operand_set_disp_width(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_DISP_WIDTH] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_using_default_segment0(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_USING_DEFAULT_SEGMENT0];
}
static inline void xed3_operand_set_using_default_segment0(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_USING_DEFAULT_SEGMENT0] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_using_default_segment1(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_USING_DEFAULT_SEGMENT1];
}
static inline void xed3_operand_set_using_default_segment1(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_USING_DEFAULT_SEGMENT1] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_hint(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_HINT];
}
static inline void xed3_operand_set_hint(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_HINT] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_mode_first_prefix(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_MODE_FIRST_PREFIX];
}
static inline void xed3_operand_set_mode_first_prefix(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_MODE_FIRST_PREFIX] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_uimm1(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_UIMM1];
}
static inline void xed3_operand_set_uimm1(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_UIMM1] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_smode(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_SMODE];
}
static inline void xed3_operand_set_smode(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_SMODE] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_rm(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_RM];
}
static inline void xed3_operand_set_rm(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_RM] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_modrm(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_MODRM];
}
static inline void xed3_operand_set_modrm(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_MODRM] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_chip(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_CHIP];
}
static inline void xed3_operand_set_chip(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_CHIP] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_mode(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_MODE];
}
static inline void xed3_operand_set_mode(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_MODE] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_rexxp(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_REXXP];
}
static inline void xed3_operand_set_rexxp(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_REXXP] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_brdisp1(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_BRDISP1];
}
static inline void xed3_operand_set_brdisp1(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_BRDISP1] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_reg13(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_REG13];
}
static inline void xed3_operand_set_reg13(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_REG13] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_amd3dnow(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_AMD3DNOW];
}
static inline void xed3_operand_set_amd3dnow(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_AMD3DNOW] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_vexpfx_op(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_VEXPFX_OP];
}
static inline void xed3_operand_set_vexpfx_op(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_VEXPFX_OP] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_outreg(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_OUTREG];
}
static inline void xed3_operand_set_outreg(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_OUTREG] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_map(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_MAP];
}
static inline void xed3_operand_set_map(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_MAP] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_sibindex(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_SIBINDEX];
}
static inline void xed3_operand_set_sibindex(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_SIBINDEX] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_agen(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_AGEN];
}
static inline void xed3_operand_set_agen(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_AGEN] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_nominal_opcode(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_NOMINAL_OPCODE];
}
static inline void xed3_operand_set_nominal_opcode(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_NOMINAL_OPCODE] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_seg1(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_SEG1];
}
static inline void xed3_operand_set_seg1(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_SEG1] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_seg0(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_SEG0];
}
static inline void xed3_operand_set_seg0(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_SEG0] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_vexpp(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_VEXPP];
}
static inline void xed3_operand_set_vexpp(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_VEXPP] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_nprefixes(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_NPREFIXES];
}
static inline void xed3_operand_set_nprefixes(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_NPREFIXES] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_index(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_INDEX];
}
static inline void xed3_operand_set_index(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_INDEX] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_ild_f2(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_ILD_F2];
}
static inline void xed3_operand_set_ild_f2(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_ILD_F2] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_scale(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_SCALE];
}
static inline void xed3_operand_set_scale(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_SCALE] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_sreg(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_SREG];
}
static inline void xed3_operand_set_sreg(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_SREG] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_esrc(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_ESRC];
}
static inline void xed3_operand_set_esrc(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_ESRC] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_vexl(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_VEXL];
}
static inline void xed3_operand_set_vexl(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_VEXL] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_nrexes(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_NREXES];
}
static inline void xed3_operand_set_nrexes(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_NREXES] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_pos_sib(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_POS_SIB];
}
static inline void xed3_operand_set_pos_sib(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_POS_SIB] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_osz(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_OSZ];
}
static inline void xed3_operand_set_osz(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_OSZ] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_uimm02(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_UIMM02];
}
static inline void xed3_operand_set_uimm02(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_UIMM02] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_uimm03(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_UIMM03];
}
static inline void xed3_operand_set_uimm03(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_UIMM03] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_uimm00(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_UIMM00];
}
static inline void xed3_operand_set_uimm00(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_UIMM00] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_uimm01(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_UIMM01];
}
static inline void xed3_operand_set_uimm01(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_UIMM01] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_element_size(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_ELEMENT_SIZE];
}
static inline void xed3_operand_set_element_size(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_ELEMENT_SIZE] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_pos_disp(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_POS_DISP];
}
static inline void xed3_operand_set_pos_disp(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_POS_DISP] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_vexdest210(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_VEXDEST210];
}
static inline void xed3_operand_set_vexdest210(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_VEXDEST210] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_vexdest3(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_VEXDEST3];
}
static inline void xed3_operand_set_vexdest3(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_VEXDEST3] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_refining(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_REFINING];
}
static inline void xed3_operand_set_refining(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_REFINING] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_vexr_op(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_VEXR_OP];
}
static inline void xed3_operand_set_vexr_op(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_VEXR_OP] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_ptr(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_PTR];
}
static inline void xed3_operand_set_ptr(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_PTR] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_vexpp_op(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_VEXPP_OP];
}
static inline void xed3_operand_set_vexpp_op(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_VEXPP_OP] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_p4(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_P4];
}
static inline void xed3_operand_set_p4(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_P4] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_lbit(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_LBIT];
}
static inline void xed3_operand_set_lbit(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_LBIT] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_modep55c(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_MODEP55C];
}
static inline void xed3_operand_set_modep55c(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_MODEP55C] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_iclass(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_ICLASS];
}
static inline void xed3_operand_set_iclass(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_ICLASS] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_vmap(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_VMAP];
}
static inline void xed3_operand_set_vmap(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_VMAP] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_imm_width(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_IMM_WIDTH];
}
static inline void xed3_operand_set_imm_width(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_IMM_WIDTH] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_error(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_ERROR];
}
static inline void xed3_operand_set_error(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_ERROR] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_nelem(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_NELEM];
}
static inline void xed3_operand_set_nelem(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_NELEM] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_imm0signed(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_IMM0SIGNED];
}
static inline void xed3_operand_set_imm0signed(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_IMM0SIGNED] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_reg8(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_REG8];
}
static inline void xed3_operand_set_reg8(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_REG8] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_reg9(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_REG9];
}
static inline void xed3_operand_set_reg9(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_REG9] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_reg6(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_REG6];
}
static inline void xed3_operand_set_reg6(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_REG6] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_reg7(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_REG7];
}
static inline void xed3_operand_set_reg7(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_REG7] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_reg4(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_REG4];
}
static inline void xed3_operand_set_reg4(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_REG4] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_reg5(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_REG5];
}
static inline void xed3_operand_set_reg5(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_REG5] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_reg2(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_REG2];
}
static inline void xed3_operand_set_reg2(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_REG2] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_reg3(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_REG3];
}
static inline void xed3_operand_set_reg3(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_REG3] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_reg0(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_REG0];
}
static inline void xed3_operand_set_reg0(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_REG0] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_reg1(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_REG1];
}
static inline void xed3_operand_set_reg1(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_REG1] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_base0(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_BASE0];
}
static inline void xed3_operand_set_base0(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_BASE0] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_df32(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_DF32];
}
static inline void xed3_operand_set_df32(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_DF32] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_escvl_op(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_ESCVL_OP];
}
static inline void xed3_operand_set_escvl_op(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_ESCVL_OP] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_xmap43(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_XMAP43];
}
static inline void xed3_operand_set_xmap43(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_XMAP43] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_mod(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_MOD];
}
static inline void xed3_operand_set_mod(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_MOD] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_rex(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_REX];
}
static inline void xed3_operand_set_rex(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_REX] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_rexb(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_REXB];
}
static inline void xed3_operand_set_rexb(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_REXB] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_pos_imm(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_POS_IMM];
}
static inline void xed3_operand_set_pos_imm(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_POS_IMM] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_rep(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_REP];
}
static inline void xed3_operand_set_rep(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_REP] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_rexw(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_REXW];
}
static inline void xed3_operand_set_rexw(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_REXW] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_ild_f3(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_ILD_F3];
}
static inline void xed3_operand_set_ild_f3(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_ILD_F3] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_rexr(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_REXR];
}
static inline void xed3_operand_set_rexr(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_REXR] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_rexbp(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_REXBP];
}
static inline void xed3_operand_set_rexbp(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_REXBP] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_disp_bytes(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_DISP_BYTES];
}
static inline void xed3_operand_set_disp_bytes(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_DISP_BYTES] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_encoder_preferred(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_ENCODER_PREFERRED];
}
static inline void xed3_operand_set_encoder_preferred(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_ENCODER_PREFERRED] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_reg(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_REG];
}
static inline void xed3_operand_set_reg(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_REG] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_pos_nominal_opcode(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_POS_NOMINAL_OPCODE];
}
static inline void xed3_operand_set_pos_nominal_opcode(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_POS_NOMINAL_OPCODE] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_rexx(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_REXX];
}
static inline void xed3_operand_set_rexx(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_REXX] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_prefix66(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_PREFIX66];
}
static inline void xed3_operand_set_prefix66(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_PREFIX66] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_vexb_op(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_VEXB_OP];
}
static inline void xed3_operand_set_vexb_op(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_VEXB_OP] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_rexrp(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_REXRP];
}
static inline void xed3_operand_set_rexrp(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_REXRP] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_asz(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_ASZ];
}
static inline void xed3_operand_set_asz(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_ASZ] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_mem1(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_MEM1];
}
static inline void xed3_operand_set_mem1(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_MEM1] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_easz(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_EASZ];
}
static inline void xed3_operand_set_easz(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_EASZ] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_pos_imm1(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_POS_IMM1];
}
static inline void xed3_operand_set_pos_imm1(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_POS_IMM1] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_mem_width(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_MEM_WIDTH];
}
static inline void xed3_operand_set_mem_width(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_MEM_WIDTH] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_xmap(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_XMAP];
}
static inline void xed3_operand_set_xmap(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_XMAP] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_mem0(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_MEM0];
}
static inline void xed3_operand_set_mem0(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_MEM0] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_brdisp_width(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_BRDISP_WIDTH];
}
static inline void xed3_operand_set_brdisp_width(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_BRDISP_WIDTH] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_imm1_bytes(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_IMM1_BYTES];
}
static inline void xed3_operand_set_imm1_bytes(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_IMM1_BYTES] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_df64(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_DF64];
}
static inline void xed3_operand_set_df64(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_DF64] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_lock(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_LOCK];
}
static inline void xed3_operand_set_lock(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_LOCK] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_has_modrm(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_HAS_MODRM];
}
static inline void xed3_operand_set_has_modrm(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_HAS_MODRM] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_srm(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_SRM];
}
static inline void xed3_operand_set_srm(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_SRM] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_vexvalid(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_VEXVALID];
}
static inline void xed3_operand_set_vexvalid(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_VEXVALID] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_needrex(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_NEEDREX];
}
static inline void xed3_operand_set_needrex(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_NEEDREX] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_rep_able(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_REP_ABLE];
}
static inline void xed3_operand_set_rep_able(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_REP_ABLE] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_default_seg(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_DEFAULT_SEG];
}
static inline void xed3_operand_set_default_seg(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_DEFAULT_SEG] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_nseg_prefixes(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_NSEG_PREFIXES];
}
static inline void xed3_operand_set_nseg_prefixes(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_NSEG_PREFIXES] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_vexl_op(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_VEXL_OP];
}
static inline void xed3_operand_set_vexl_op(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_VEXL_OP] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_vex_c4(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_VEX_C4];
}
static inline void xed3_operand_set_vex_c4(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_VEX_C4] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_pos_modrm(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_POS_MODRM];
}
static inline void xed3_operand_set_pos_modrm(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_POS_MODRM] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_bcast(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_BCAST];
}
static inline void xed3_operand_set_bcast(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_BCAST] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_type(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_TYPE];
}
static inline void xed3_operand_set_type(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_TYPE] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_vexmm34_op(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_VEXMM34_OP];
}
static inline void xed3_operand_set_vexmm34_op(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_VEXMM34_OP] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_seg_ovd(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_SEG_OVD];
}
static inline void xed3_operand_set_seg_ovd(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_SEG_OVD] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_vex_prefix(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_VEX_PREFIX];
}
static inline void xed3_operand_set_vex_prefix(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_VEX_PREFIX] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_norex(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_NOREX];
}
static inline void xed3_operand_set_norex(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_NOREX] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_sibbase(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_SIBBASE];
}
static inline void xed3_operand_set_sibbase(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_SIBBASE] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_need_memdisp(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_NEED_MEMDISP];
}
static inline void xed3_operand_set_need_memdisp(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_NEED_MEMDISP] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_out_of_bytes(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_OUT_OF_BYTES];
}
static inline void xed3_operand_set_out_of_bytes(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_OUT_OF_BYTES] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_lockable(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_LOCKABLE];
}
static inline void xed3_operand_set_lockable(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_LOCKABLE] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_imm1(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_IMM1];
}
static inline void xed3_operand_set_imm1(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_IMM1] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_imm0(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_IMM0];
}
static inline void xed3_operand_set_imm0(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_IMM0] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_relbr(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_RELBR];
}
static inline void xed3_operand_set_relbr(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_RELBR] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_ild_seg(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_ILD_SEG];
}
static inline void xed3_operand_set_ild_seg(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_ILD_SEG] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_mbits(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_MBITS];
}
static inline void xed3_operand_set_mbits(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_MBITS] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_base1(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_BASE1];
}
static inline void xed3_operand_set_base1(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_BASE1] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_vexx_op(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_VEXX_OP];
}
static inline void xed3_operand_set_vexx_op(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_VEXX_OP] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_realmode(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_REALMODE];
}
static inline void xed3_operand_set_realmode(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_REALMODE] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_modrm_byte(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_MODRM_BYTE];
}
static inline void xed3_operand_set_modrm_byte(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_MODRM_BYTE] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_reg14(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_REG14];
}
static inline void xed3_operand_set_reg14(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_REG14] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_reg15(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_REG15];
}
static inline void xed3_operand_set_reg15(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_REG15] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_reg10(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_REG10];
}
static inline void xed3_operand_set_reg10(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_REG10] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_reg11(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_REG11];
}
static inline void xed3_operand_set_reg11(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_REG11] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_reg12(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_REG12];
}
static inline void xed3_operand_set_reg12(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_REG12] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_brdisp0(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_BRDISP0];
}
static inline void xed3_operand_set_brdisp0(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_BRDISP0] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_disp1(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_DISP1];
}
static inline void xed3_operand_set_disp1(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_DISP1] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_disp0(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_DISP0];
}
static inline void xed3_operand_set_disp0(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_DISP0] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_disp3(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_DISP3];
}
static inline void xed3_operand_set_disp3(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_DISP3] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_disp2(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_DISP2];
}
static inline void xed3_operand_set_disp2(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_DISP2] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_sibscale(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_SIBSCALE];
}
static inline void xed3_operand_set_sibscale(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_SIBSCALE] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_imm_bytes(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_IMM_BYTES];
}
static inline void xed3_operand_set_imm_bytes(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_IMM_BYTES] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_vl(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_VL];
}
static inline void xed3_operand_set_vl(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_VL] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_has_sib(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_HAS_SIB];
}
static inline void xed3_operand_set_has_sib(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_HAS_SIB] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_max_bytes(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_MAX_BYTES];
}
static inline void xed3_operand_set_max_bytes(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_MAX_BYTES] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_first_f2f3(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_FIRST_F2F3];
}
static inline void xed3_operand_set_first_f2f3(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_FIRST_F2F3] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_vb2_op(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_VB2_OP];
}
static inline void xed3_operand_set_vb2_op(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_VB2_OP] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_eosz(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_EOSZ];
}
static inline void xed3_operand_set_eosz(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_EOSZ] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_vexmap_op(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_VEXMAP_OP];
}
static inline void xed3_operand_set_vexmap_op(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_VEXMAP_OP] = opval ;
}
static inline xed_operand_values_t xed3_operand_get_modep5(const xed_decoded_inst_t* d)
{
return d->_operands[XED_OPERAND_MODEP5];
}
static inline void xed3_operand_set_modep5(xed_decoded_inst_t* d, xed_operand_values_t opval)
{
d->_operands[XED_OPERAND_MODEP5] = opval ;
}
#endif
